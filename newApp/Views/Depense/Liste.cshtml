@using System.Text.Json

@{
    ViewData["Title"] = "Tableau de Bord des Dépenses et Budgets";
    var depenses = ViewData["Depenses"] as List<newApp.Models.Depense>;
    var budgets = ViewData["Budgets"] as List<newApp.Models.CustomerBudget>;

    var totalLead = ViewData["totalLead"] ?? 0;
    var totalTicket = ViewData["totalTicket"] ?? 0;
    var totalBudget =ViewData["totBudget"];
    var firstFour=ViewData["first4"] as Dictionary<int,double>;

    var categories=JsonSerializer.Serialize(firstFour.Keys);
    var values=JsonSerializer.Serialize(firstFour.Values);
}


<div class="row">
<div class="col-md-3">
          <div class="card">
            <div class="card-body">
              <h5 class="card-title">Depense Ticket/Lead</h5>

              <!-- Donut Chart -->
              <div id="donutChart" style="min-height: 200px;" class="echart"></div>

              <script>
                document.addEventListener("DOMContentLoaded", () => {
                  echarts.init(document.querySelector("#donutChart")).setOption({
                    tooltip: {
                      trigger: 'item'
                    },
                    legend: {
                      top: '5%',
                      left: 'center'
                    },
                    series: [{
                      name: 'Access From',
                      type: 'pie',
                      radius: ['40%', '70%'],
                      avoidLabelOverlap: false,
                      label: {
                        show: false,
                        position: 'center'
                      },
                      emphasis: {
                        label: {
                          show: true,
                          fontSize: '18',
                          fontWeight: 'bold'
                        }
                      },
                      labelLine: {
                        show: false
                      },
                      data: [{
                          value: @totalTicket,
                          name: 'Ticket'
                        },
                        {
                          value: @totalLead,
                          name: 'Lead'
                        },
                      ]
                    }]
                  });
                });
              </script>
              <script src="https://cdn.jsdelivr.net/npm/echarts@5.3.2/dist/echarts.min.js"></script>

              <!-- End Donut Chart -->

            </div>
          </div>
        </div>
    
        <div class="col-md-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">High Budgets</h5>

                    <!-- Bar Chart -->
                    <div id="barChart" style="min-height: 200px;" class="echart"></div>

                  <script>
                  document.addEventListener("DOMContentLoaded", () => {
                    var categories = @Html.Raw(categories);
                    var values = @Html.Raw(values);
                  
                    echarts.init(document.querySelector("#barChart")).setOption({
                      xAxis: {
                        type: 'category',
                        data: categories
                      },
                      yAxis: {
                        type: 'value',
                      },
                      series: [{
                        data: values,
                        type: 'bar'
                      }]
                    });
                  });
                  </script>
                 

                </div>
            </div>
        </div>
          <div class="col-md-5">
                  <div class="card">
                    <div class="card-body">
                       <h5 class="card-title">Valeur des sommes</h5>
                      
                                    <!-- Vertical Bar Chart -->
                                    <div id="verticalBarChart" style="min-height: 200px;" class="echart"></div>
                      
                                    <script>
                                      document.addEventListener("DOMContentLoaded", () => {
                                        echarts.init(document.querySelector("#verticalBarChart")).setOption({
                                 
                                          tooltip: {
                                            trigger: 'axis',
                                            axisPointer: {
                                              type: 'shadow'
                                            }
                                          },
                                          legend: {},
                                          grid: {
                                            left: '3%',
                                            right: '4%',
                                            bottom: '3%',
                                            containLabel: true
                                          },
                                          xAxis: {
                                            type: 'value',
                                            boundaryGap: [0, 0.01]
                                          },
                                          yAxis: {
                                            type: 'category',
                                            data: ['Lead', 'Ticket', 'Budget']
                                          },
                                          series: [{
                                              
                                              type: 'bar',
                                              data: [@totalLead, @totalTicket, @totalBudget]
                                            }
                                          ]
                                        });
                                      });
                                    </script>
                                    <!-- End Vertical Bar Chart -->
                    </div>
                  </div>
                </div>
</div>
<!-- end chart -->
<div class="container mt-4">

    <!-- Section Total Dynamique -->
    <div class="alert alert-primary text-center fw-bold" id="total-label">
        Total Dépenses Leads : <span id="total-value">@totalLead Ar</span>
    </div>

    <!-- Dashboard -->
    <div class="row text-center">
        <div class="col-md-4">
            <div class="card shadow-sm rounded bg-light p-3" onclick="showSection('lead-section', 'Total Dépenses Leads', @totalLead)">
                <h5 class="fw-bold">Total Dépenses Leads</h5>
                <p class="text-primary fw-bold">@totalLead Ar</p>
                <button class="btn btn-info btn-sm">Voir Détails</button>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm rounded bg-light p-3" onclick="showSection('ticket-section', 'Total Dépenses Tickets', @totalTicket)">
                <h5 class="fw-bold">Total Dépenses Tickets</h5>
                <p class="text-danger fw-bold">@totalTicket Ar</p>
                <button class="btn btn-info btn-sm">Voir Détails</button>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm rounded bg-light p-3" onclick="showSection('budget-section', 'Total Budgets', @totalBudget)">
                <h5 class="fw-bold">Total Budgets</h5>
                <p class="text-success fw-bold">@totalBudget Ar</p>
                <button class="btn btn-info btn-sm">Voir Détails</button>
            </div>
        </div>
    </div>

    <!-- Sections détaillées -->
    <div class="mt-4">
        <div id="lead-section" class="details-section">
            <h3 class="text-center">Dépenses liées aux Leads</h3>
            <table class="table table-striped table-hover table-bordered text-center">
                <thead class="table-primary">
                    <tr>
                        <th>ID Dépense</th>
                        <th>Montant</th>
                        <th>Date</th>
                        <th>Lead ID</th>
                        <th>Customer ID</th>
                        <th>Customer Name</th>
                        <th>Description</th>
                        <th>Modifier</th>
                        <th>Effacer</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var depense in depenses?.Where(d => d.LeadId != 0) ?? new List<newApp.Models.Depense>())
                    {
                        <tr>
                            <td>@depense.IdDepense</td>
                            <td class="fw-bold text-danger">@depense.Montant Ar</td>
                            <td>@depense.DateEns</td>
                            <td>@depense.LeadId</td>
                            <td>@depense.CustomerId</td>
                            <td>@depense.CustomerName</td>
                            <td>@depense.Description</td>
                            <td>
                                <form action="/Depense/modifier" method="post">
                                    <input name="idDepense" type="hidden" value="@depense.IdDepense">
                                    <input name="montant" type="number" class="form-control form-control-sm">
                                    <button class="btn btn-warning btn-sm mt-1" type="submit">Modifier</button>
                                </form>
                            </td>
                            <td>
                                <form action="/Depense/supprimer" method="get">
                                    <input name="idDepense" type="hidden" value="@depense.IdDepense">
                                    <button class="btn btn-danger btn-sm mt-1" type="submit">Effacer</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div id="ticket-section" class="details-section">
            <h3 class="text-center">Dépenses liées aux Tickets</h3>
            <table class="table table-striped table-hover table-bordered text-center">
                <thead class="table-danger">
                    <tr>
                        <th>ID Dépense</th>
                        <th>Montant</th>
                        <th>Date</th>
                        <th>Ticket ID</th>
                        <th>Customer ID</th>
                        <th>Customer Name</th>
                        <th>Description</th>
                        <th>Modifier</th>
                        <th>Effacer</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var depense in depenses?.Where(d => d.TicketId != 0) ?? new List<newApp.Models.Depense>())
                    {
                        <tr>
                            <td>@depense.IdDepense</td>
                            <td class="fw-bold text-primary">@depense.Montant Ar</td>
                            <td>@depense.DateEns</td>
                            <td>@depense.TicketId</td>
                            <td>@depense.CustomerId</td>
                            <td>@depense.CustomerName</td>
                            <td>@depense.Description</td>
                            <td>
                                <form action="/Depense/modifier" method="post">
                                    <input name="idDepense" type="hidden" value="@depense.IdDepense">
                                    <input name="montant" type="number" class="form-control form-control-sm">
                                    <button class="btn btn-warning btn-sm mt-1" type="submit">Modifier</button>
                                </form>
                            </td>
                            <td>
                                <form action="/Depense/supprimer" method="get">
                                    <input name="idDepense" type="hidden" value="@depense.IdDepense">
                                    <button class="btn btn-danger btn-sm mt-1" type="submit">Effacer</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div id="budget-section" class="details-section">
            <h3 class="text-center">Budgets</h3>
            <table class="table table-striped table-hover table-bordered text-center">
                <thead class="table-success">
                    <tr>
                        <th>ID Budget</th>
                        <th>Montant</th>
                        <th>Date</th>
                        <th>Customer ID</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var budget in budgets ?? new List<newApp.Models.CustomerBudget>())
                    {
                        <tr>
                            <td>@budget.IdBudgetCustomer</td>
                            <td class="fw-bold text-success">@budget.Montant Ar</td>
                            <td>@budget.DateEns</td>
                            <td>@budget.CustomerId</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Script pour changer les sections -->
<script>
    function showSection(sectionId, totalLabel, totalValue) {
        document.querySelectorAll(".details-section").forEach(section => section.style.display = "none");
        document.getElementById(sectionId).style.display = "block";
        document.getElementById("total-label").innerText = totalLabel;
        document.getElementById("total-value").innerText = totalValue + " Ar";
    }

    document.addEventListener("DOMContentLoaded", function () {
        showSection('lead-section', 'Total Dépenses Leads', @totalLead);
    });
</script>